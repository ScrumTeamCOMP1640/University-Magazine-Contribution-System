@model List<COMP1640.Models.Article>

@{
	ViewData["Title"] = "Charts";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="main__container">
	<div class="grid wide">
		<div class="row main__content">
			<div class="col l-12 m-12 c-12">
				<div class="select-bar">
					<table>
						<tbody>
							<tr>
								<td>
									<span>Academic Year</span>
                                    <select id="academicYearSelect" name="academicYear">
                                        @foreach (var year in ViewBag.AcademicYears)
                                        {
                                            <option value="@year">@year</option>
                                        }
                                    </select>
								</td>
								<td>
									<span>Term</span>
                                    <select id="termSelect" name="termId"></select>
								</td>
							</tr>
						</tbody>
					</table>
				</div>

                <div id="loading">
                    <div class="spinner"></div>
                </div>
                <div id="chartContainer"></div>

			</div>
		</div>
	</div>
</div>

@section ScriptsChart {
    <script>
        $(document).ready(function () {
            function showLoading() {
                $('#loading').fadeIn(500);
                $('#pagination').hide();
            }

            function hideLoading() {
                $('#loading').fadeOut(500);
                $('#articleList').fadeIn(1000);
            }

            function updateTermOptions(academicYear) {
                $.ajax({
                    url: '@Url.Action("GetTermsByYear", "Home")',
                    type: 'GET',
                    data: { academicYear: academicYear },
                    success: function (data) {
                        $('#termSelect').empty();
                        $.each(data, function (index, row) {
                            var option = new Option(row.termName, row.termId);
                            $('#termSelect').append(option);
                        });
                        var termId = $('#termSelect').val();
                        updateContributionsChart(termId);
                    },
                    error: function (xhr, status, error) {
                        console.error(xhr.responseText);
                    }
                });
            }

            var defaultAcademicYear = $('#academicYearSelect').val();
            updateTermOptions(defaultAcademicYear);

            $('#academicYearSelect').change(function () {
                var selectedYear = $(this).val();
                updateTermOptions(selectedYear);
            });

            function updateContributionsChart(termId) {
                $.ajax({
                    url: '@Url.Action("GetContributorsByFacultyForTerm", "Home")',
                    type: 'GET',
                    data: { termId: termId },
                    beforeSend: function () {
                        showLoading();
                    },
                    success: function (data) {
                        $('#chartContainer').empty();
                        setTimeout(function () {
                            if (data.faculties.length === 0 && data.contributorCounts.length === 0) {
                                $('#chartContainer').html('<div class="col l-12 m-12 c-12"><div class="no-results"><div class="no-results__img" style="background-image: url(@Url.Content("~/img/no_data.svg"))"></div><h2>No data available</h2></div></div>');
                            } else {
                                $('#chartContainer').html('<canvas id="myBarChart"></canvas><canvas id="myPieChart"></canvas>');
                                const contributorsData = {
                                    labels: data.faculties,
                                    data: data.contributorCounts,
                                    backgroundColor: [
                                        'rgba(255, 99, 132, 0.5)',
                                        'rgba(54, 162, 235, 0.5)',
                                        'rgba(255, 206, 86, 0.5)',
                                        'rgba(75, 192, 192, 0.5)',
                                        'rgba(153, 102, 255, 0.5)'
                                    ],
                                    borderColor: [
                                        'rgba(255, 99, 132, 1)',
                                        'rgba(54, 162, 235, 1)',
                                        'rgba(255, 206, 86, 1)',
                                        'rgba(75, 192, 192, 1)',
                                        'rgba(153, 102, 255, 1)'
                                    ],
                                    borderWidth: 1
                                };

                                const barChart = document.getElementById('myBarChart');
                                const pieChart = document.getElementById('myPieChart');

                                const myBarChart = new Chart(barChart, {
                                    type: 'bar',
                                    data: {
                                        labels: contributorsData.labels,
                                        datasets: [{
                                            label: 'Number of Contributors',
                                            data: contributorsData.data,
                                            backgroundColor: contributorsData.backgroundColor,
                                            borderColor: contributorsData.borderColor,
                                            borderWidth: contributorsData.borderWidth
                                        }]
                                    },
                                    options: {
                                        responsive: true,
                                        maintainAspectRatio: false,
                                        plugins: {
                                            legend: {
                                                display: true,
                                                position: 'bottom',
                                                labels: {
                                                    padding: 20
                                                }
                                            }
                                        },
                                        scales: {
                                            y: {
                                                beginAtZero: true
                                            }
                                        }
                                    }
                                });

                                const totalContributions = contributorsData.data.reduce((a, b) => a + b, 0);

                                const percentages = contributorsData.data.map(contributions => ((contributions / totalContributions) * 100).toFixed(2));

                                const myPieChart = new Chart(pieChart, {
                                    type: 'pie',
                                    data: {
                                        labels: contributorsData.labels.map((label, index) => `${label} (${percentages[index]}%)`),
                                        datasets: [{
                                            label: 'Number of Contributors',
                                            data: contributorsData.data,
                                            backgroundColor: contributorsData.backgroundColor,
                                            borderColor: contributorsData.borderColor,
                                            borderWidth: contributorsData.borderWidth
                                        }]
                                    },
                                    options: {
                                        responsive: true,
                                        maintainAspectRatio: false,
                                        plugins: {
                                            legend: {
                                                display: true,
                                                position: 'right',
                                                labels: {
                                                    usePointStyle: true
                                                }
                                            }
                                        }
                                    }
                                });
                            }
                        }, 1000);
                        hideLoading();
                    },
                    error: function (xhr, status, error) {
                        console.error(xhr.responseText);
                    }
                });
            }

            $('#termSelect').change(function () {
                var termId = $(this).val();
                updateContributionsChart(termId);
            });
        });
    </script>
}

